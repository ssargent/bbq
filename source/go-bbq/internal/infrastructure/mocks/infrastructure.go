// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ssargent/go-bbq/internal/infrastructure (interfaces: CacheService)

// Package mock_infrastructure is a generated GoMock package.
package mock_infrastructure

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
	time "time"
)

// MockCacheService is a mock of CacheService interface
type MockCacheService struct {
	ctrl     *gomock.Controller
	recorder *MockCacheServiceMockRecorder
}

// MockCacheServiceMockRecorder is the mock recorder for MockCacheService
type MockCacheServiceMockRecorder struct {
	mock *MockCacheService
}

// NewMockCacheService creates a new mock instance
func NewMockCacheService(ctrl *gomock.Controller) *MockCacheService {
	mock := &MockCacheService{ctrl: ctrl}
	mock.recorder = &MockCacheServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCacheService) EXPECT() *MockCacheServiceMockRecorder {
	return m.recorder
}

// GetItem mocks base method
func (m *MockCacheService) GetItem(arg0 string, arg1 interface{}) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetItem", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetItem indicates an expected call of GetItem
func (mr *MockCacheServiceMockRecorder) GetItem(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetItem", reflect.TypeOf((*MockCacheService)(nil).GetItem), arg0, arg1)
}

// RemoveItem mocks base method
func (m *MockCacheService) RemoveItem(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveItem", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// RemoveItem indicates an expected call of RemoveItem
func (mr *MockCacheServiceMockRecorder) RemoveItem(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveItem", reflect.TypeOf((*MockCacheService)(nil).RemoveItem), arg0)
}

// SetItem mocks base method
func (m *MockCacheService) SetItem(arg0 string, arg1 interface{}, arg2 time.Duration) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetItem", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetItem indicates an expected call of SetItem
func (mr *MockCacheServiceMockRecorder) SetItem(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetItem", reflect.TypeOf((*MockCacheService)(nil).SetItem), arg0, arg1, arg2)
}
