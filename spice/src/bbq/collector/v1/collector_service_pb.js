// @generated by protoc-gen-es v1.9.0 with parameter "target=js+dts"
// @generated from file bbq/collector/v1/collector_service.proto (package bbq.collector.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3, Timestamp } from "@bufbuild/protobuf";
import { Reading, Session } from "./bbq_pb.js";

/**
 * @generated from message bbq.collector.v1.RecordRequest
 */
export const RecordRequest = /*@__PURE__*/ proto3.makeMessageType(
  "bbq.collector.v1.RecordRequest",
  () => [
    { no: 1, name: "reading", kind: "message", T: Reading },
  ],
);

/**
 * @generated from message bbq.collector.v1.RecordResponse
 */
export const RecordResponse = /*@__PURE__*/ proto3.makeMessageType(
  "bbq.collector.v1.RecordResponse",
  () => [
    { no: 1, name: "session_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "recorded_at", kind: "message", T: Timestamp },
  ],
);

/**
 * @generated from message bbq.collector.v1.SessionRequest
 */
export const SessionRequest = /*@__PURE__*/ proto3.makeMessageType(
  "bbq.collector.v1.SessionRequest",
  () => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message bbq.collector.v1.SessionResponse
 */
export const SessionResponse = /*@__PURE__*/ proto3.makeMessageType(
  "bbq.collector.v1.SessionResponse",
  () => [
    { no: 1, name: "session", kind: "message", T: Session },
  ],
);

