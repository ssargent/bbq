// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.18.0

package repository

import (
	"context"

	"github.com/google/uuid"
)

type Querier interface {
	DeleteSubjectState(ctx context.Context, db DBTX, id uuid.UUID) error
	GetDefaultDevice(ctx context.Context, db DBTX) (*BbqDevice, error)
	GetDefaultSensor(ctx context.Context, db DBTX) (*BbqSensor, error)
	GetDeviceByID(ctx context.Context, db DBTX, id uuid.UUID) (*BbqDevice, error)
	GetDeviceByName(ctx context.Context, db DBTX, name string) (*BbqDevice, error)
	GetDevices(ctx context.Context, db DBTX) ([]*BbqDevice, error)
	GetReadingsBySessionID(ctx context.Context, db DBTX, sessionID uuid.UUID) ([]*BbqSensorReading, error)
	GetSensorByID(ctx context.Context, db DBTX, id uuid.UUID) (*BbqSensor, error)
	GetSensorByName(ctx context.Context, db DBTX, name string) (*BbqSensor, error)
	GetSensors(ctx context.Context, db DBTX) ([]*BbqSensor, error)
	GetSessionByID(ctx context.Context, db DBTX, id uuid.UUID) (*BbqSession, error)
	GetSessions(ctx context.Context, db DBTX) ([]*BbqSession, error)
	GetSubjectByID(ctx context.Context, db DBTX, id uuid.UUID) (*BbqSubject, error)
	GetSubjectStatesBySubjectID(ctx context.Context, db DBTX, subjectID uuid.UUID) ([]*BbqSubjectState, error)
	GetSubjects(ctx context.Context, db DBTX) ([]*BbqSubject, error)
	InsertDevice(ctx context.Context, db DBTX, arg *InsertDeviceParams) (*BbqDevice, error)
	InsertSensor(ctx context.Context, db DBTX, arg *InsertSensorParams) (*BbqSensor, error)
	InsertSensorReading(ctx context.Context, db DBTX, arg *InsertSensorReadingParams) error
	InsertSession(ctx context.Context, db DBTX, arg *InsertSessionParams) (*BbqSession, error)
	InsertSubject(ctx context.Context, db DBTX, arg *InsertSubjectParams) (*BbqSubject, error)
	InsertSubjectState(ctx context.Context, db DBTX, arg *InsertSubjectStateParams) (*BbqSubjectState, error)
	UpdateDevice(ctx context.Context, db DBTX, arg *UpdateDeviceParams) (*BbqDevice, error)
	UpdateSensor(ctx context.Context, db DBTX, arg *UpdateSensorParams) (*BbqSensor, error)
	UpdateSession(ctx context.Context, db DBTX, arg *UpdateSessionParams) (*BbqSession, error)
	UpdateSubject(ctx context.Context, db DBTX, arg *UpdateSubjectParams) (*BbqSubject, error)
}

var _ Querier = (*Queries)(nil)
